<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Last Ent's Thoughts (Posts about enterprise software development)</title><link>https://last-ent.com/</link><description></description><atom:link href="https://last-ent.com/categories/enterprise-software-development.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:blog@last-ent.com"&gt;Ent&lt;/a&gt; </copyright><lastBuildDate>Wed, 14 Oct 2020 22:25:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Elements of Coding Style</title><link>https://last-ent.com/posts/elements-of-coding-style/</link><dc:creator>Ent</dc:creator><description>&lt;div&gt;&lt;h2&gt;Rules of Software Engineering&lt;/h2&gt;
&lt;p&gt;There are three important rules in Software Engineering.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rule 1: Easy to understand&lt;/strong&gt;. Anyone should be able to pick up the code and start working on it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rule 2: Easy to debug&lt;/strong&gt;. If the code breaks, it should be easy to quickly investigate &amp;amp; identify where is the issue.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rule 3: Shipping is the most important feature&lt;/strong&gt;. No matter how correct or elegant your code is, if you can't ship working code on time then why bother?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having said that, &lt;code&gt;Rule 3&lt;/code&gt; should rarely be in opposition to &lt;code&gt;Rule 1 &amp;amp; 2&lt;/code&gt;. If you have to veto &lt;code&gt;Rule 1 &amp;amp; 2&lt;/code&gt; to ship your feature, then something's horribly wrong in your code &amp;amp; process. Complexity in code is a given and it is an engineer's responsibility to figure out how best to contain the damage and stop it from affecting the rest of the system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Less elegant yet easy to understand &amp;amp; easier to debug should be the minimum expectation from all code shipped.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://last-ent.com/posts/elements-of-coding-style/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>enterprise software development</category><category>musings</category><category>programming</category><category>software engineering</category><guid>https://last-ent.com/posts/elements-of-coding-style/</guid><pubDate>Sun, 15 Sep 2019 09:04:43 GMT</pubDate></item></channel></rss>